{"id":"node_modules/@supabase/functions-js/dist/module/helper.js","dependencies":[{"name":"D:\\Projects\\Game Engine\\Isometric\\web\\note-mockup\\node_modules\\@supabase\\functions-js\\dist\\module\\helper.js.map","includedInParent":true,"mtime":499162500000},{"name":"D:\\Projects\\Game Engine\\Isometric\\web\\note-mockup\\node_modules\\@supabase\\functions-js\\src\\helper.ts","includedInParent":true,"mtime":499162500000},{"name":"D:\\Projects\\Game Engine\\Isometric\\web\\note-mockup\\package.json","includedInParent":true,"mtime":1648815755119},{"name":"D:\\Projects\\Game Engine\\Isometric\\web\\note-mockup\\node_modules\\@supabase\\functions-js\\package.json","includedInParent":true,"mtime":1648766672660},{"name":"cross-fetch","loc":{"line":1,"column":23,"index":23},"parent":"D:\\Projects\\Game Engine\\Isometric\\web\\note-mockup\\node_modules\\@supabase\\functions-js\\dist\\module\\helper.js","resolved":"D:\\Projects\\Game Engine\\Isometric\\web\\note-mockup\\node_modules\\cross-fetch\\dist\\browser-ponyfill.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.resolveFetch = void 0;\n\nvar _crossFetch = _interopRequireDefault(require(\"cross-fetch\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst resolveFetch = customFetch => {\n  let _fetch;\n\n  if (customFetch) {\n    _fetch = customFetch;\n  } else if (typeof fetch === 'undefined') {\n    _fetch = _crossFetch.default;\n  } else {\n    _fetch = fetch;\n  }\n\n  return (...args) => _fetch(...args);\n};\n\nexports.resolveFetch = resolveFetch;"},"sourceMaps":{"js":{"mappings":[{"source":"../../src/helper.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":8,"column":0}},{"source":"../../src/helper.ts","name":null,"original":{"line":5,"column":7},"generated":{"line":12,"column":0}},{"source":"../../src/helper.ts","name":null,"original":{"line":5,"column":13},"generated":{"line":12,"column":6}},{"source":"../../src/helper.ts","name":null,"original":{"line":5,"column":25},"generated":{"line":12,"column":18}},{"source":"../../src/helper.ts","name":null,"original":{"line":5,"column":29},"generated":{"line":12,"column":21}},{"source":"../../src/helper.ts","name":null,"original":{"line":5,"column":28},"generated":{"line":12,"column":32}},{"source":"../../src/helper.ts","name":null,"original":{"line":5,"column":59},"generated":{"line":12,"column":36}},{"source":"../../src/helper.ts","name":null,"original":{"line":6,"column":2},"generated":{"line":13,"column":0}},{"source":"../../src/helper.ts","name":null,"original":{"line":6,"column":6},"generated":{"line":13,"column":6}},{"source":"../../src/helper.ts","name":null,"original":{"line":6,"column":2},"generated":{"line":13,"column":12}},{"source":"../../src/helper.ts","name":null,"original":{"line":7,"column":2},"generated":{"line":15,"column":0}},{"source":"../../src/helper.ts","name":null,"original":{"line":7,"column":6},"generated":{"line":15,"column":6}},{"source":"../../src/helper.ts","name":null,"original":{"line":7,"column":2},"generated":{"line":15,"column":17}},{"source":"../../src/helper.ts","name":null,"original":{"line":7,"column":19},"generated":{"line":15,"column":19}},{"source":"../../src/helper.ts","name":null,"original":{"line":8,"column":4},"generated":{"line":16,"column":0}},{"source":"../../src/helper.ts","name":null,"original":{"line":8,"column":4},"generated":{"line":16,"column":4}},{"source":"../../src/helper.ts","name":null,"original":{"line":8,"column":10},"generated":{"line":16,"column":10}},{"source":"../../src/helper.ts","name":null,"original":{"line":8,"column":13},"generated":{"line":16,"column":13}},{"source":"../../src/helper.ts","name":null,"original":{"line":8,"column":4},"generated":{"line":16,"column":24}},{"source":"../../src/helper.ts","name":null,"original":{"line":9,"column":3},"generated":{"line":17,"column":0}},{"source":"../../src/helper.ts","name":null,"original":{"line":7,"column":2},"generated":{"line":17,"column":3}},{"source":"../../src/helper.ts","name":null,"original":{"line":9,"column":9},"generated":{"line":17,"column":9}},{"source":"../../src/helper.ts","name":null,"original":{"line":9,"column":13},"generated":{"line":17,"column":13}},{"source":"../../src/helper.ts","name":null,"original":{"line":9,"column":20},"generated":{"line":17,"column":20}},{"source":"../../src/helper.ts","name":null,"original":{"line":9,"column":13},"generated":{"line":17,"column":25}},{"source":"../../src/helper.ts","name":null,"original":{"line":9,"column":30},"generated":{"line":17,"column":30}},{"source":"../../src/helper.ts","name":null,"original":{"line":9,"column":9},"generated":{"line":17,"column":41}},{"source":"../../src/helper.ts","name":null,"original":{"line":9,"column":43},"generated":{"line":17,"column":43}},{"source":"../../src/helper.ts","name":null,"original":{"line":10,"column":4},"generated":{"line":18,"column":0}},{"source":"../../src/helper.ts","name":null,"original":{"line":10,"column":4},"generated":{"line":18,"column":4}},{"source":"../../src/helper.ts","name":null,"original":{"line":10,"column":10},"generated":{"line":18,"column":10}},{"source":"../../src/helper.ts","name":null,"original":{"line":10,"column":13},"generated":{"line":18,"column":13}},{"source":"../../src/helper.ts","name":null,"original":{"line":10,"column":4},"generated":{"line":18,"column":32}},{"source":"../../src/helper.ts","name":null,"original":{"line":11,"column":3},"generated":{"line":19,"column":0}},{"source":"../../src/helper.ts","name":null,"original":{"line":9,"column":9},"generated":{"line":19,"column":3}},{"source":"../../src/helper.ts","name":null,"original":{"line":11,"column":9},"generated":{"line":19,"column":9}},{"source":"../../src/helper.ts","name":null,"original":{"line":12,"column":4},"generated":{"line":20,"column":0}},{"source":"../../src/helper.ts","name":null,"original":{"line":12,"column":4},"generated":{"line":20,"column":4}},{"source":"../../src/helper.ts","name":null,"original":{"line":12,"column":10},"generated":{"line":20,"column":10}},{"source":"../../src/helper.ts","name":null,"original":{"line":12,"column":13},"generated":{"line":20,"column":13}},{"source":"../../src/helper.ts","name":null,"original":{"line":12,"column":4},"generated":{"line":20,"column":18}},{"source":"../../src/helper.ts","name":null,"original":{"line":13,"column":3},"generated":{"line":21,"column":0}},{"source":"../../src/helper.ts","name":null,"original":{"line":14,"column":2},"generated":{"line":23,"column":0}},{"source":"../../src/helper.ts","name":null,"original":{"line":14,"column":9},"generated":{"line":23,"column":9}},{"source":"../../src/helper.ts","name":null,"original":{"line":14,"column":10},"generated":{"line":23,"column":10}},{"source":"../../src/helper.ts","name":null,"original":{"line":14,"column":13},"generated":{"line":23,"column":13}},{"source":"../../src/helper.ts","name":null,"original":{"line":14,"column":9},"generated":{"line":23,"column":17}},{"source":"../../src/helper.ts","name":null,"original":{"line":14,"column":22},"generated":{"line":23,"column":22}},{"source":"../../src/helper.ts","name":null,"original":{"line":14,"column":28},"generated":{"line":23,"column":28}},{"source":"../../src/helper.ts","name":null,"original":{"line":14,"column":29},"generated":{"line":23,"column":29}},{"source":"../../src/helper.ts","name":null,"original":{"line":14,"column":32},"generated":{"line":23,"column":32}},{"source":"../../src/helper.ts","name":null,"original":{"line":14,"column":28},"generated":{"line":23,"column":36}},{"source":"../../src/helper.ts","name":null,"original":{"line":14,"column":2},"generated":{"line":23,"column":37}},{"source":"../../src/helper.ts","name":null,"original":{"line":15,"column":1},"generated":{"line":24,"column":0}},{"source":"../../src/helper.ts","name":null,"original":{"line":5,"column":7},"generated":{"line":24,"column":1}}],"sources":{"../../src/helper.ts":"import crossFetch from 'cross-fetch'\n\ntype Fetch = typeof fetch\n\nexport const resolveFetch = (customFetch?: Fetch): Fetch => {\n  let _fetch: Fetch\n  if (customFetch) {\n    _fetch = customFetch\n  } else if (typeof fetch === 'undefined') {\n    _fetch = crossFetch as unknown as Fetch\n  } else {\n    _fetch = fetch\n  }\n  return (...args) => _fetch(...args)\n}\n"},"lineCount":null}},"error":null,"hash":"066344ba521982962680dcc154cff095","cacheData":{"env":{}}}